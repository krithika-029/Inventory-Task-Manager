@using InventoryTaskManager.Models
@model DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Dashboard</h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group me-2">
                        <button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
                        <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
                    </div>
                    <button type="button" class="btn btn-sm btn-primary">
                        <i class="fas fa-refresh"></i> Refresh
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row g-3 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card border-primary">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="text-uppercase text-muted small">Total Products</div>
                            <div class="h3 mb-0">@Model.TotalProducts</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-boxes fa-2x text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card border-success">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="text-uppercase text-muted small">Total Categories</div>
                            <div class="h3 mb-0">@Model.TotalCategories</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tags fa-2x text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card border-warning">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="text-uppercase text-muted small">Low Stock Items</div>
                            <div class="h3 mb-0">@Model.LowStockProducts</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exclamation-triangle fa-2x text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card border-info">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="text-uppercase text-muted small">Total Tasks</div>
                            <div class="h3 mb-0">@Model.TotalTasks</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tasks fa-2x text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Task Summary and Inventory Value -->
    <div class="row g-3 mb-4">
        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">Task Overview</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-3">
                            <div class="text-muted small">Pending</div>
                            <div class="h4 text-secondary">@Model.PendingTasks</div>
                        </div>
                        <div class="col-3">
                            <div class="text-muted small">In Progress</div>
                            <div class="h4 text-primary">@Model.InProgressTasks</div>
                        </div>
                        <div class="col-3">
                            <div class="text-muted small">Completed</div>
                            <div class="h4 text-success">@Model.CompletedTasks</div>
                        </div>
                        <div class="col-3">
                            <div class="text-muted small">Overdue</div>
                            <div class="h4 text-danger">@Model.OverdueTasks</div>
                        </div>
                    </div>
                    <div class="mt-3">
                        <div class="d-flex justify-content-between small">
                            <span>Task Completion Rate</span>
                            <span>@Model.TaskCompletionRate.ToString("F1")%</span>
                        </div>
                        <div class="progress mt-2">
                            <div class="progress-bar" role="progressbar" style="width: @Model.TaskCompletionRate%">
                                @Model.TaskCompletionRate.ToString("F1")%
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">Inventory Overview</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6">
                            <div class="text-muted small">Total Value</div>
                            <div class="h4 text-success">₹@Model.TotalInventoryValue.ToString("N2")</div>
                        </div>
                        <div class="col-6">
                            <div class="text-muted small">Avg. Price</div>
                            <div class="h4 text-info">₹@Model.AverageProductPrice.ToString("N2")</div>
                        </div>
                    </div>
                    <div class="mt-3">
                        <div class="d-flex justify-content-between small">
                            <span>Most Stocked Category</span>
                            <span class="badge bg-primary">@(Model.MostStockedCategory ?? "N/A")</span>
                        </div>
                        <div class="d-flex justify-content-between small mt-2">
                            <span>Least Stocked Category</span>
                            <span class="badge bg-secondary">@(Model.LeastStockedCategory ?? "N/A")</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Urgent Tasks and Low Stock Items -->
    <div class="row g-3 mb-4">
        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Urgent Tasks</h5>
                    <span class="badge bg-danger">@Model.UrgentTasks.Count</span>
                </div>
                <div class="card-body">
                    @if (Model.UrgentTasks.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var task in Model.UrgentTasks)
                            {
                                <div class="list-group-item px-0">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">
                                            <a href="@Url.Action("Details", "Task", new { id = task.Id })" class="text-decoration-none">
                                                @task.Title
                                            </a>
                                        </h6>
                                        <small class="@task.PriorityClass">
                                            @task.Priority
                                        </small>
                                    </div>
                                    <p class="mb-1 text-muted small">@task.Description</p>
                                    <small class="@(task.IsOverdue ? "text-danger" : "text-warning")">
                        <i class="fas fa-calendar-alt"></i>
                        @task.DueDate.ToString("MMM dd, yyyy")
                                        @if (task.IsOverdue)
                                        {
                                            <span class="badge bg-danger ms-2">Overdue</span>
                                        }
                                        else if (task.IsDueSoon)
                                        {
                                            <span class="badge bg-warning ms-2">Due Soon</span>
                                        }
                                    </small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-3">
                            <i class="fas fa-check-circle fa-2x"></i>
                            <p class="mt-2">No urgent tasks</p>
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <a href="@Url.Action("Index", "Task")" class="btn btn-sm btn-outline-primary">
                        <i class="fas fa-tasks"></i> View All Tasks
                    </a>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Low Stock Items</h5>
                    <span class="badge bg-warning">@Model.LowStockItems.Count</span>
                </div>
                <div class="card-body">
                    @if (Model.LowStockItems.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var product in Model.LowStockItems)
                            {
                                <div class="list-group-item px-0">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">
                                            <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="text-decoration-none">
                                                @product.Name
                                            </a>
                                        </h6>
                                        <small class="text-muted">@product.Category?.Name</small>
                                    </div>
                                    <p class="mb-1 text-muted small">@product.Description</p>
                                    <small class="text-danger">
                                        <i class="fas fa-exclamation-triangle"></i>
                                        Only @product.Quantity units left
                                        <span class="badge bg-danger ms-2">Low Stock</span>
                                    </small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-3">
                            <i class="fas fa-boxes fa-2x"></i>
                            <p class="mt-2">All items are well stocked</p>
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <a href="@Url.Action("Index", "Product", new { lowStock = true })" class="btn btn-sm btn-outline-warning">
                        <i class="fas fa-exclamation-triangle"></i> View All Low Stock
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="row g-3 mb-4">
        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">Recent Products</h5>
                </div>
                <div class="card-body">
                    @if (Model.RecentProducts.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var product in Model.RecentProducts)
                            {
                                <div class="list-group-item px-0">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">
                                            <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="text-decoration-none">
                                                @product.Name
                                            </a>
                                        </h6>
                                        <small class="text-muted">@product.Category?.Name</small>
                                    </div>
                                    <p class="mb-1 text-muted small">@product.Description</p>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar-alt"></i>
                                        Added @product.CreatedDate.ToString("MMM dd, yyyy")
                                    </small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-3">
                            <i class="fas fa-box fa-2x"></i>
                            <p class="mt-2">No products added yet</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">Recent Tasks</h5>
                </div>
                <div class="card-body">
                    @if (Model.RecentTasks.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var task in Model.RecentTasks)
                            {
                                <div class="list-group-item px-0">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">
                                            <a href="@Url.Action("Details", "Task", new { id = task.Id })" class="text-decoration-none">
                                                @task.Title
                                            </a>
                                        </h6>
                                        <small class="@task.StatusClass">@task.Status</small>
                                    </div>
                                    <p class="mb-1 text-muted small">@task.Description</p>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar-alt"></i>
                                        Created @task.CreatedDate.ToString("MMM dd, yyyy")
                                    </small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-3">
                            <i class="fas fa-tasks fa-2x"></i>
                            <p class="mt-2">No tasks created yet</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row g-3 mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-3 col-md-6 mb-3">
                            <a href="@Url.Action("Create", "Product")" class="btn btn-outline-primary w-100">
                                <i class="fas fa-plus"></i> Add Product
                            </a>
                        </div>
                        <div class="col-lg-3 col-md-6 mb-3">
                            <a href="@Url.Action("Create", "Category")" class="btn btn-outline-success w-100">
                                <i class="fas fa-plus"></i> Add Category
                            </a>
                        </div>
                        <div class="col-lg-3 col-md-6 mb-3">
                            <a href="@Url.Action("Create", "Task")" class="btn btn-outline-info w-100">
                                <i class="fas fa-plus"></i> Add Task
                            </a>
                        </div>
                        <div class="col-lg-3 col-md-6 mb-3">
                            <a href="@Url.Action("Index", "Product", new { lowStock = true })" class="btn btn-outline-warning w-100">
                                <i class="fas fa-exclamation-triangle"></i> Check Low Stock
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        // Auto-refresh dashboard every 5 minutes
        setInterval(function() {
            location.reload();
        }, 300000);
    });
</script>
