@model IEnumerable<InventoryTaskManager.Models.TaskItem>

@{
    ViewData["Title"] = ViewBag.Title ?? "Tasks";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>@ViewData["Title"]</h2>
                <div>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add New Task
                    </a>
                    <a asp-action="Overdue" class="btn btn-danger">
                        <i class="fas fa-exclamation-triangle"></i> Overdue
                    </a>
                    <a asp-action="DueSoon" class="btn btn-warning">
                        <i class="fas fa-clock"></i> Due Soon
                    </a>
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Filter and Sort Controls -->
            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-md-3">
                            <label for="status" class="form-label">Filter by Status</label>
                            <select name="status" class="form-select">
                                <option value="">All Statuses</option>
<option value="@InventoryTaskManager.Models.TaskStatus.Pending" selected="@(ViewBag.CurrentStatus?.ToString() == InventoryTaskManager.Models.TaskStatus.Pending.ToString())">Pending</option>
<option value="@InventoryTaskManager.Models.TaskStatus.InProgress" selected="@(ViewBag.CurrentStatus?.ToString() == InventoryTaskManager.Models.TaskStatus.InProgress.ToString())">In Progress</option>
<option value="@InventoryTaskManager.Models.TaskStatus.Completed" selected="@(ViewBag.CurrentStatus?.ToString() == InventoryTaskManager.Models.TaskStatus.Completed.ToString())">Completed</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="sortBy" class="form-label">Sort by</label>
                            <select name="sortBy" class="form-select">
                                <option value="DueDate" selected="@(ViewBag.CurrentSortBy == "DueDate")">Due Date</option>
                                <option value="Priority" selected="@(ViewBag.CurrentSortBy == "Priority")">Priority</option>
                                <option value="Status" selected="@(ViewBag.CurrentSortBy == "Status")">Status</option>
                                <option value="Title" selected="@(ViewBag.CurrentSortBy == "Title")">Title</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label for="sortOrder" class="form-label">Order</label>
                            <select name="sortOrder" class="form-select">
                                <option value="asc" selected="@(ViewBag.CurrentSortOrder == "asc")">Ascending</option>
                                <option value="desc" selected="@(ViewBag.CurrentSortOrder == "desc")">Descending</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-outline-primary">
                                    <i class="fas fa-filter"></i> Apply
                                </button>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-grid">
                                <a asp-action="Index" class="btn btn-outline-secondary">
                                    <i class="fas fa-undo"></i> Clear
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Tasks List -->
            <div class="card">
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>
                                            <a asp-action="Index" asp-route-sortBy="Title" asp-route-sortOrder="@ViewBag.NextSortOrder" 
                                               asp-route-status="@ViewBag.CurrentStatus" class="text-white text-decoration-none">
                                                Title @if (ViewBag.CurrentSortBy == "Title")
                                                {
                                                    <i class="fas fa-sort-@(ViewBag.CurrentSortOrder == "asc" ? "up" : "down")"></i>
                                                }
                                            </a>
                                        </th>
                                        <th>
                                            <a asp-action="Index" asp-route-sortBy="Status" asp-route-sortOrder="@ViewBag.NextSortOrder" 
                                               asp-route-status="@ViewBag.CurrentStatus" class="text-white text-decoration-none">
                                                Status @if (ViewBag.CurrentSortBy == "Status")
                                                {
                                                    <i class="fas fa-sort-@(ViewBag.CurrentSortOrder == "asc" ? "up" : "down")"></i>
                                                }
                                            </a>
                                        </th>
                                        <th>
                                            <a asp-action="Index" asp-route-sortBy="Priority" asp-route-sortOrder="@ViewBag.NextSortOrder" 
                                               asp-route-status="@ViewBag.CurrentStatus" class="text-white text-decoration-none">
                                                Priority @if (ViewBag.CurrentSortBy == "Priority")
                                                {
                                                    <i class="fas fa-sort-@(ViewBag.CurrentSortOrder == "asc" ? "up" : "down")"></i>
                                                }
                                            </a>
                                        </th>
                                        <th>
                                            <a asp-action="Index" asp-route-sortBy="DueDate" asp-route-sortOrder="@ViewBag.NextSortOrder" 
                                               asp-route-status="@ViewBag.CurrentStatus" class="text-white text-decoration-none">
                                                Due Date @if (ViewBag.CurrentSortBy == "DueDate")
                                                {
                                                    <i class="fas fa-sort-@(ViewBag.CurrentSortOrder == "asc" ? "up" : "down")"></i>
                                                }
                                            </a>
                                        </th>
                                        <th>Assigned To</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var task in Model)
                                    {
                                        <tr class="@(task.IsOverdue ? "table-danger" : task.IsDueSoon ? "table-warning" : "")">
                                            <td>
                                                <strong>@task.Title</strong>
                                                @if (!string.IsNullOrEmpty(task.Description))
                                                {
                                                    <br><small class="text-muted">@(task.Description.Length > 100 ? task.Description.Substring(0, 100) + "..." : task.Description)</small>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge @task.StatusClass">@task.Status.ToString().Replace("InProgress", "In Progress")</span>
                                            </td>
                                            <td>
                                                <span class="badge @task.PriorityClass">@task.Priority</span>
                                            </td>
                                            <td>
                                                <span class="@(task.IsOverdue ? "text-danger fw-bold" : task.IsDueSoon ? "text-warning fw-bold" : "")">
                                                    @task.DueDate.ToString("MMM dd, yyyy")
                                                </span>
                                                @if (task.IsOverdue)
                                                {
                                                    <br><span class="badge bg-danger">Overdue</span>
                                                }
                                                else if (task.IsDueSoon)
                                                {
                                                    <br><span class="badge bg-warning">Due Soon</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(task.AssignedTo))
                                                {
                                                    <span class="badge bg-secondary">@task.AssignedTo</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Unassigned</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="Details" asp-route-id="@task.Id" 
                                                       class="btn btn-outline-info" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@task.Id" 
                                                       class="btn btn-outline-primary" title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
@if (task.Status != InventoryTaskManager.Models.TaskStatus.Completed)
                                                    {
                                                        <form asp-action="MarkComplete" asp-route-id="@task.Id" method="post" class="d-inline">
                                                            <button type="submit" class="btn btn-outline-success btn-sm" title="Mark Complete">
                                                                <i class="fas fa-check"></i>
                                                            </button>
                                                        </form>
                                                    }
                                                    <a asp-action="Delete" asp-route-id="@task.Id" 
                                                       class="btn btn-outline-danger" title="Delete">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <div class="card bg-light">
                                    <div class="card-body">
                                        <h6 class="card-title">Task Summary</h6>
                                        <div class="row">
                                            <div class="col-6">
                                                <div class="text-center">
                                                    <div class="fs-5 text-primary">@Model.Count()</div>
                                                    <small class="text-muted">Total Tasks</small>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="text-center">
<div class="fs-5 text-success">@Model.Count(t => t.Status == InventoryTaskManager.Models.TaskStatus.Completed)</div>
                                                    <small class="text-muted">Completed</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="card bg-light">
                                    <div class="card-body">
                                        <h6 class="card-title">Urgent Tasks</h6>
                                        <div class="row">
                                            <div class="col-6">
                                                <div class="text-center">
                                                    <div class="fs-5 text-danger">@Model.Count(t => t.IsOverdue)</div>
                                                    <small class="text-muted">Overdue</small>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="text-center">
                                                    <div class="fs-5 text-warning">@Model.Count(t => t.IsDueSoon && !t.IsOverdue)</div>
                                                    <small class="text-muted">Due Soon</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-tasks fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">No tasks found</h4>
                            <p class="text-muted">
                                @if (ViewBag.CurrentStatus != null)
                                {
                                    <span>No tasks match your filter criteria.</span>
                                }
                                else
                                {
                                    <span>Get started by creating your first task.</span>
                                }
                            </p>
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Add First Task
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            $('.alert').fadeOut('slow');
        }, 5000);

        // Confirm mark complete action
        $('form[asp-action="MarkComplete"]').on('submit', function(e) {
            if (!confirm('Mark this task as completed?')) {
                e.preventDefault();
            }
        });
    </script>
}
