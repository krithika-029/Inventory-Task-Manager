@model InventoryTaskManager.Models.TaskItem

@{
    ViewData["Title"] = "Edit Task";
}

<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Edit Task</h2>
                <div>
                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-info">
                        <i class="fas fa-eye"></i> View Details
                    </a>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Tasks
                    </a>
                </div>
            </div>

            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                Edit Task Information
                                @if (Model.IsOverdue)
                                {
                                    <span class="badge bg-danger ms-2">Overdue</span>
                                }
                                else if (Model.IsDueSoon)
                                {
                                    <span class="badge bg-warning ms-2">Due Soon</span>
                                }
                            </h5>
                        </div>
                        <div class="card-body">
                            <form asp-action="Edit">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                
                                <input type="hidden" asp-for="Id" />
                                <input type="hidden" asp-for="CreatedDate" />
                                <input type="hidden" asp-for="CompletedDate" />
                                
                                <div class="form-group mb-3">
                                    <label asp-for="Title" class="form-label"></label>
                                    <input asp-for="Title" class="form-control" placeholder="Enter task title" />
                                    <span asp-validation-for="Title" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="Description" class="form-label"></label>
                                    <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter task description (optional)"></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>

                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group mb-3">
                                            <label asp-for="Status" class="form-label"></label>
                                            <select asp-for="Status" class="form-select">
<option value="@InventoryTaskManager.Models.TaskStatus.Pending">Pending</option>
<option value="@InventoryTaskManager.Models.TaskStatus.InProgress">In Progress</option>
<option value="@InventoryTaskManager.Models.TaskStatus.Completed">Completed</option>
                                            </select>
                                            <span asp-validation-for="Status" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group mb-3">
                                            <label asp-for="Priority" class="form-label"></label>
                                            <select asp-for="Priority" class="form-select">
<option value="@InventoryTaskManager.Models.TaskPriority.Low">Low</option>
<option value="@InventoryTaskManager.Models.TaskPriority.Medium">Medium</option>
<option value="@InventoryTaskManager.Models.TaskPriority.High">High</option>
<option value="@InventoryTaskManager.Models.TaskPriority.Critical">Critical</option>
                                            </select>
                                            <span asp-validation-for="Priority" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group mb-3">
                                            <label asp-for="DueDate" class="form-label"></label>
                                            <input asp-for="DueDate" type="date" class="form-control" />
                                            <span asp-validation-for="DueDate" class="text-danger"></span>
                                            @if (Model.IsOverdue)
                                            {
                                                <div class="form-text text-danger">
                                                    <i class="fas fa-exclamation-triangle"></i> 
                                                    This task is overdue by @Math.Abs(Model.DaysUntilDue) day(s)
                                                </div>
                                            }
                                            else if (Model.IsDueSoon)
                                            {
                                                <div class="form-text text-warning">
                                                    <i class="fas fa-clock"></i> 
                                                    Due in @Model.DaysUntilDue day(s)
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="AssignedTo" class="form-label"></label>
                                    <input asp-for="AssignedTo" class="form-control" placeholder="Enter person or department name (optional)" />
                                    <span asp-validation-for="AssignedTo" class="text-danger"></span>
                                </div>

                                <div class="form-group mt-4">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save"></i> Save Changes
                                    </button>
                                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-info ms-2">
                                        <i class="fas fa-eye"></i> View Details
                                    </a>
                                    <a asp-action="Index" class="btn btn-secondary ms-2">
                                        <i class="fas fa-times"></i> Cancel
                                    </a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="card-title mb-0">Current Task Status</h6>
                        </div>
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-6">
                                    <div class="border-end">
                                        <div class="fs-4 @(Model.Priority == TaskPriority.Critical ? "text-danger" : Model.Priority == TaskPriority.High ? "text-warning" : "text-info")">
                                            @Model.Priority
                                        </div>
                                        <small class="text-muted">Priority</small>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="fs-4 @(Model.IsOverdue ? "text-danger" : Model.IsDueSoon ? "text-warning" : "text-success")">
                                        @Math.Abs(Model.DaysUntilDue)
                                    </div>
                                    <small class="text-muted">Days @(Model.IsOverdue ? "Overdue" : "Until Due")</small>
                                </div>
                            </div>
                            
                            <hr>
                            
                            <div class="mb-3">
                                <small class="text-muted">Task Status</small>
                                <div class="progress">
                                    @{
                                        var progressPercentage = Model.Status switch
                                        {
InventoryTaskManager.Models.TaskStatus.Pending => 0,
InventoryTaskManager.Models.TaskStatus.InProgress => 50,
InventoryTaskManager.Models.TaskStatus.Completed => 100,
                                            _ => 0
                                        };
                                        var progressClass = Model.Status switch
                                        {
InventoryTaskManager.Models.TaskStatus.Pending => "bg-warning",
InventoryTaskManager.Models.TaskStatus.InProgress => "bg-info",
InventoryTaskManager.Models.TaskStatus.Completed => "bg-success",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <div class="progress-bar @progressClass" role="progressbar" 
                                         style="width: @progressPercentage%" 
                                         aria-valuenow="@progressPercentage" 
                                         aria-valuemin="0" 
                                         aria-valuemax="100">
                                        @progressPercentage%
                                    </div>
                                </div>
                            </div>

                            @if (Model.IsOverdue)
                            {
                                <div class="alert alert-danger" role="alert">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    <strong>Overdue!</strong><br>
                                    This task is overdue by @Math.Abs(Model.DaysUntilDue) day(s)
                                </div>
                            }
                            else if (Model.IsDueSoon)
                            {
                                <div class="alert alert-warning" role="alert">
                                    <i class="fas fa-clock"></i>
                                    <strong>Due Soon!</strong><br>
                                    Due in @Model.DaysUntilDue day(s)
                                </div>
                            }
                        </div>
                    </div>

                    <div class="card mt-3">
                        <div class="card-header">
                            <h6 class="card-title mb-0">Record Information</h6>
                        </div>
                        <div class="card-body">
                            <div class="row mb-2">
                                <div class="col-sm-5">
                                    <small class="text-muted">Created:</small>
                                </div>
                                <div class="col-sm-7">
                                    <small>@Model.CreatedDate.ToString("MMM dd, yyyy")</small>
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-sm-5">
                                    <small class="text-muted">Last Updated:</small>
                                </div>
                                <div class="col-sm-7">
                                    <small>@Model.UpdatedDate.ToString("MMM dd, yyyy")</small>
                                </div>
                            </div>
                            @if (Model.CompletedDate.HasValue)
                            {
                                <div class="row">
                                    <div class="col-sm-5">
                                        <small class="text-muted">Completed:</small>
                                    </div>
                                    <div class="col-sm-7">
                                        <small class="text-success">@Model.CompletedDate.Value.ToString("MMM dd, yyyy")</small>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="card mt-3">
                        <div class="card-header">
                            <h6 class="card-title mb-0">Quick Actions</h6>
                        </div>
                        <div class="card-body">
                            <div class="d-grid gap-2">
@if (Model.Status != InventoryTaskManager.Models.TaskStatus.Completed)
                                {
                                    <form asp-action="MarkComplete" asp-route-id="@Model.Id" method="post">
                                        <button type="submit" class="btn btn-outline-success w-100">
                                            <i class="fas fa-check"></i> Mark Complete
                                        </button>
                                    </form>
                                }
                                <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-info">
                                    <i class="fas fa-eye"></i> View Details
                                </a>
                                <a asp-action="Index" class="btn btn-outline-secondary">
                                    <i class="fas fa-list"></i> All Tasks
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Monitor status changes
        $('#Status').on('change', function() {
            var status = $(this).val();
            var completedAlert = $('#completedAlert');
            
            if (status === 'Completed') {
                if (!completedAlert.length) {
                    $('<div id="completedAlert" class="alert alert-success mt-2" role="alert">' +
                      '<i class="fas fa-check-circle"></i> Task will be marked as completed when saved.' +
                      '</div>').insertAfter('#Status');
                }
            } else {
                completedAlert.remove();
            }
        });

        // Confirm mark complete action
        $('form[asp-action="MarkComplete"]').on('submit', function(e) {
            if (!confirm('Mark this task as completed?')) {
                e.preventDefault();
            }
        });
    </script>
}
